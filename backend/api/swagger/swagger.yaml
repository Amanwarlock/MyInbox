swagger: "2.0"
info:
  version: "0.0.1"
  title: MyInbox
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /MyInbox/api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user/v1:
    x-swagger-router-controller: controller
    get:
      description: Fetch the login user by using token details
      operationId: v1_loggedInUser
      responses:
        "200":
          description: Ok
          schema: 
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/create:
    x-swagger-router-controller: controller
    post:
      description: Creates / sign up a new user
      operationId: v1_createUser
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/create_user'
      responses:
        "200":
          description: Ok
          schema: 
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/login:
    x-swagger-router-controller: controller
    post:
      description: Login API with JWT
      operationId: v1_login
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/login_schema'
      responses:
        "200":
          description: Ok
          schema: 
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  create_user:
    required:
      - name
      - username
      - password
      - email
    properties:
      name: {type: string}
      username: {type: string}
      password: {type: string}
      email: {type: string}
  login_schema:
    required:
      - username
      - password
    properties:
      username: {type: string}
      password: {type: string}

  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
